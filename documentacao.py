import streamlit as st

# Fun√ß√£o para a Introdu√ß√£o
def mostrar_introducao():
    st.header("üîç Introdu√ß√£o")
    st.markdown("""
    Bem-vindo √† **Documenta√ß√£o** do nosso aplicativo de **Gerenciamento de S√©ries Temporais**! Este guia ir√° auxili√°-lo a entender como utilizar as funcionalidades dispon√≠veis de forma eficiente.
    
    **Objetivo**: Facilitar a manipula√ß√£o, pr√©-processamento e an√°lise de s√©ries temporais provenientes de diferentes fontes, preparando os dados para modelagem preditiva utilizando regress√£o.
    """)

# Fun√ß√£o para Combina√ß√£o de S√©ries
def mostrar_combinacao_series():
    st.header("üîó Combina√ß√£o de S√©ries Temporais")
    st.markdown("""
    Nosso aplicativo permite combinar s√©ries temporais de diferentes fontes, como **BCB**, **IBGE** ou atrav√©s de **uploads de arquivos**. A combina√ß√£o adequada das s√©ries enriquece a an√°lise e melhora a performance dos modelos de regress√£o.
    
    ### **Tipos de Combina√ß√£o √öteis**
    - **BCB + IBGE**: Combinar indicadores financeiros com dados socioecon√¥micos.
    - **BCB + Upload do Usu√°rio**: Integrar dados oficiais com informa√ß√µes espec√≠ficas fornecidas pelo usu√°rio.
    
    ### **Como Combinar S√©ries**
    1. **Selecione as S√©ries Desejadas**: Escolha as s√©ries que deseja combinar a partir das fontes dispon√≠veis.
    2. **Defina as Fun√ß√µes**: Marque cada s√©rie como **X** (independente) ou **Y** (dependente) conforme a an√°lise desejada.
    3. **Ajuste os Intervalos de Datas**: Alinhe os per√≠odos das s√©ries para garantir consist√™ncia temporal.
    4. **Clique em "Aplicar"**: Mescle as s√©ries selecionadas no conjunto principal de dados (**df_main**).
    """)

# Fun√ß√£o para Op√ß√µes do Gerenciador de S√©ries
def mostrar_opcoes_gerenciador():
    st.header("‚öôÔ∏è Configura√ß√µes do Gerenciador de S√©ries")
    st.markdown("""
    O **Gerenciador de S√©ries** oferece diversas op√ß√µes para personalizar o pr√©-processamento das suas s√©ries temporais:
    
    - **Fun√ß√£o X ou Y**: Defina cada s√©rie como vari√°vel independente (**X**) ou dependente (**Y**).
    - **Intervalos de Datas Personalizados**: Especifique datas de in√≠cio e t√©rmino para alinhar todas as s√©ries em um mesmo per√≠odo.
    - **Datas Comuns**: Ative para for√ßar todas as s√©ries a compartilharem um intervalo de datas comum.
    - **Normaliza√ß√£o**: Normalize os valores das s√©ries para uma escala entre 0 e 1, facilitando compara√ß√µes e modelagens.
    - **M√©todos de Preenchimento de Nulos**:
        - **√öltimo Valor V√°lido**: Preenche valores ausentes com o √∫ltimo valor dispon√≠vel.
        - **Pr√≥ximo Valor V√°lido**: Preenche valores ausentes com o pr√≥ximo valor dispon√≠vel.
        - **M√©dia**: Substitui valores nulos pela m√©dia da s√©rie.
        - **Zeros**: Preenche valores ausentes com zero.
    
    **Dicas de Uso**:
    - **Datas Comuns**: Utilize esta op√ß√£o para garantir que todas as s√©ries estejam alinhadas temporalmente.
    - **Normaliza√ß√£o**: Recomendado quando as s√©ries possuem escalas diferentes.
    - **M√©todos de Preenchimento**: Escolha o m√©todo que melhor se adapta √† natureza dos seus dados.
    """)

# Fun√ß√£o para Conceitos Estat√≠sticos
def mostrar_conceitos_estatisticos():
    st.header("üìä Conceitos Estat√≠sticos")
    st.markdown("""
    Compreender os conceitos estat√≠sticos √© fundamental para interpretar corretamente os resultados das an√°lises e previs√µes realizadas pelo aplicativo.
    
    - **Correla√ß√£o**: Mede a rela√ß√£o entre duas vari√°veis, indicando como uma varia em rela√ß√£o √† outra.
    - **Determin√¢ncia (R¬≤)**: Indica a propor√ß√£o da variabilidade da vari√°vel dependente que √© explicada pelo modelo de regress√£o.
    - **N√≠vel de Confian√ßa**: Refere-se √† probabilidade de que um intervalo de confian√ßa contenha o valor verdadeiro do par√¢metro.
    - **Linha de Regress√£o**: Representa a tend√™ncia central da rela√ß√£o entre as vari√°veis no modelo de regress√£o.
    - **Gr√°ficos 2D e 3D**: Visualiza√ß√µes que ajudam a entender a rela√ß√£o entre m√∫ltiplas vari√°veis e os padr√µes nos dados.
    - **Previs√£o e Estimativa**: Utiliza√ß√£o do modelo de regress√£o para prever valores futuros da vari√°vel dependente com base nos valores das vari√°veis independentes.
    
    **Import√¢ncia na Regress√£o**:
    - **Correla√ß√£o** ajuda a identificar quais vari√°veis t√™m rela√ß√£o significativa com a vari√°vel de interesse.
    - **R¬≤** avalia o qu√£o bem o modelo se ajusta aos dados observados.
    - **N√≠veis de Confian√ßa** fornecem intervalos onde se espera que os par√¢metros do modelo estejam.
    - **Visualiza√ß√µes** facilitam a interpreta√ß√£o e a comunica√ß√£o dos resultados.
    """)

# Fun√ß√£o para Exemplos de Opera√ß√µes
def mostrar_exemplos():
    st.header("üí° Exemplos de Opera√ß√µes")
    st.markdown("""
    Aqui est√£o alguns exemplos de como utilizar o aplicativo para realizar an√°lises e previs√µes com regress√£o:
    
    ### 1. **Previs√£o de Vendas com Regress√£o Linear**
    - **Selecione a S√©rie de Vendas** como vari√°vel **Y**.
    - **Selecione a S√©rie de Marketing** como vari√°vel **X**.
    - **Defina o Intervalo de Datas** de janeiro de 2020 a dezembro de 2023.
    - **Ative a Normaliza√ß√£o** para ajustar os valores das s√©ries.
    - **Escolha o M√©todo de Preenchimento de Nulos** como "√öltimo Valor V√°lido".
    - **Clique em "Aplicar"** para processar os dados.
    - **Visualize a Linha de Regress√£o** no gr√°fico 2D fornecido.
    
    ### 2. **Combina√ß√£o de S√©ries Econ√¥micas**
    - **Fa√ßa Upload** de uma s√©rie de PIB trimestral.
    - **Combine com a S√©rie de Taxa de Desemprego** fornecida pelo IBGE.
    - **Defina ambas como vari√°veis X e Y** conforme a an√°lise desejada.
    - **Ajuste as Datas** para um intervalo de 2010 a 2023.
    - **Escolha a Normaliza√ß√£o e o M√©todo de Preenchimento de Nulos** adequados.
    - **Aplicar** as configura√ß√µes e visualizar as correla√ß√µes e o modelo de regress√£o.
    
    ### 3. **Previs√£o Personalizada**
    - **Fa√ßa Upload** de sua pr√≥pria s√©rie temporal, como dados de estoque.
    - **Combine com S√©ries Disponibilizadas** no aplicativo, como vendas ou pre√ßos de mercado.
    - **Defina as Configura√ß√µes** para alinhar as s√©ries.
    - **Processar e Aplicar** para gerar previs√µes baseadas no modelo de regress√£o.
    
    **Dicas Finais**:
    - **Experimente Diferentes Combina√ß√µes de S√©ries** para explorar como elas influenciam as previs√µes.
    - **Use as Visualiza√ß√µes** para entender melhor as rela√ß√µes entre as vari√°veis.
    - **Ajuste as Configura√ß√µes** conforme necess√°rio para otimizar os resultados das previs√µes.
    """)

# Fun√ß√£o principal para criar a p√°gina de Documenta√ß√£o
def documentacao():
    st.title("üìò Documenta√ß√£o do Aplicativo de S√©ries Temporais")
    st.markdown("Bem-vindo √† **Documenta√ß√£o** do nosso aplicativo de **Gerenciamento de S√©ries Temporais**! Este guia ir√° auxili√°-lo a entender como utilizar as funcionalidades dispon√≠veis de forma eficiente.")
    
    # Menu de Navega√ß√£o na P√°gina
    menu = ["üîç Introdu√ß√£o", "üîó Combina√ß√£o de S√©ries", "‚öôÔ∏è Configura√ß√µes", "üìä Conceitos Estat√≠sticos", "üí° Exemplos de Opera√ß√µes"]
    escolha = st.sidebar.radio("Navega√ß√£o", menu)
    
    # Chamada das fun√ß√µes com base na escolha do usu√°rio
    if escolha == "üîç Introdu√ß√£o":
        mostrar_introducao()
    elif escolha == "üîó Combina√ß√£o de S√©ries":
        mostrar_combinacao_series()
    elif escolha == "‚öôÔ∏è Configura√ß√µes":
        mostrar_opcoes_gerenciador()
    elif escolha == "üìä Conceitos Estat√≠sticos":
        mostrar_conceitos_estatisticos()
    elif escolha == "üí° Exemplos de Opera√ß√µes":
        mostrar_exemplos()

# Executa a fun√ß√£o de documenta√ß√£o se o script for chamado diretamente
if __name__ == "__main__":
    documentacao()
